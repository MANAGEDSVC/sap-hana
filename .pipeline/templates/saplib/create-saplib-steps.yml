steps:
  - script: |
      set -e
      set -o errexit

      echo "=== Deploy SAP library from deployer ==="
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
      source /etc/profile.d/deploy_server.sh

      # Modify environment value so it starts with u and with length of 5
      saplib_env=${{parameters.saplib_env}}
      buildId=$(Build.BuildId)
      isRelease=${saplib_env%%$buildId*}
      if [ -z "${isRelease}" ]
      then 
        saplib_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        saplib_prefix=${saplib_env}
      fi

      saplib_rg="${saplib_prefix}-EAUS-SAP_LIBRARY"

      repo_dir=$HOME/${saplib_rg}/sap-hana
      ws_dir=$HOME/Azure_SAP_Automated_Deployment/WORKSPACES/SAP_LIBRARY/${saplib_rg}
      input=${ws_dir}/${saplib_rg}.json

      echo "=== Checkout required branch ${{parameters.branch_name}} ==="
      if [ ! -d "${repo_dir}" ]
      then
        mkdir $HOME/${saplib_rg}; cd $_
        git clone https://github.com/Azure/sap-hana.git
      fi
      cd ${repo_dir} && git pull && git checkout ${{parameters.branch_name}}
      
      echo "=== Create workspace ${ws_dir} ==="
      mkdir -p ${ws_dir}; cd $_
      
      echo "=== Prepare input for saplibrary ==="
      cp ${repo_dir}/deploy/terraform/bootstrap/sap_library/saplibrary.json ${ws_dir}/saplibrary.json
      cat ${ws_dir}/saplibrary.json \
      | jq --arg environment "${saplib_prefix}" .infrastructure.environment\ =\ \$environment \
      | jq --arg deployer_rg_name "UNIT-EAUS-MGMT-INFRASTRUCTURE" .infrastructure.deployer.resource_group.name\ =\ \$deployer_rg_name \
      | jq --arg msi_name "UNIT-EAUS-MGMT-msi" .infrastructure.deployer.msi.name\ =\ \$msi_name \
      | jq --arg downloader_username "test_username1" .software.downloader.credentials.sap_user\ =\ \$downloader_username \
      | jq --arg downloader_password "test_password1" .software.downloader.credentials.sap_password\ =\ \$downloader_password \
      > ${input}

      cat ${input}
      
      echo "=== Create SAP library from deployer with terraform ==="
      echo "=== This may take quite a while, please be patient ==="
      terraform -version
      terraform init -upgrade=true ${repo_dir}/deploy/terraform/bootstrap/sap_library/
      [ -d $HOME/.log ] || mkdir -p $HOME/.log
      terraform apply -auto-approve -var-file=${input} ${repo_dir}/deploy/terraform/bootstrap/sap_library/ 2>$HOME/.log/$(Build.BuildId)_apply_error.log 2>&1>$HOME/.log/$(Build.BuildId)_apply.log
      if [ -s $HOME/.log/$(Build.BuildId)_apply_error.log ]; then cat $HOME/.log/$(Build.BuildId)_apply_error.log; exit 1; fi;
      '
    displayName: "Deploy saplibrary: Branch ${{parameters.branch_name}}"
    condition: or(succeededOrFailed(), always())
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)
